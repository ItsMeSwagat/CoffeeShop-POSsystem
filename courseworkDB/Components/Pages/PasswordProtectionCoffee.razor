@attribute [Route(PasswordProtectionCoffee.route)]

@using MudBlazor
@using courseworkDB.Components.Layout
@using courseworkDB.Models
@using courseworkDB.Services

@inject AuthenticationService AuthenticationService
@inject Microsoft.AspNetCore.Components.NavigationManager NavigationManager
@inject ISnackbar Snackbar


<div style=" width: 100%; height: 100%; padding-top: 3rem;  " class=" d-flex justify-content-center align-items-center">
  
    <div style="width: 23rem; height: 20rem; background-color: #bdc6ce; border-radius: 20px;" class=" d-flex flex-column justify-content-center align-items-center">

        <EditForm Model="@passwordProtectionModel" OnValidSubmit="@HandleLogin" class=" input-group d-flex flex-column justify-content-center gap-3 px-4">
            <MudInputLabel Style=" font-family: Poppins; font-weight: bolder; font-size: 1.3rem;">PASSWORD:</MudInputLabel>
            <InputText type="password" @bind-Value="@passwordProtectionModel.Password" placeholder="Enter password" class=" input-group-text" style=" outline: none; border-radius: 5px; font-size: 1.2rem; height: 3rem;" />
            <DataAnnotationsValidator />
            <ValidationSummary />
            <MudButton Color="Color.Tertiary" type="submit" Variant="Variant.Filled" Style=" border-radius: 5px; height: 3rem; font-size:1.2rem;">ENTER</MudButton>
        </EditForm>

    </div>
</div>

@code {
    public const string route = "/passwordprotectioncoffee";

    private PasswordProtectionModel passwordProtectionModel = new();

    private string successMessage = string.Empty;
    private string errorMessage = string.Empty;

    private async Task HandleLogin()
    {
        if (await AuthenticationService.AuthenticateAdmin(passwordProtectionModel.Password))
        {

            successMessage = "Admin Authentication Succesfull. Thank you";
            Snackbar.Add(successMessage, Severity.Success);
            NavigationManager.NavigateTo("/coffee");
            

        }
        else
        {
            errorMessage = "Authentication Failed. Please try Again!!";
            Snackbar.Add(errorMessage, Severity.Error);
            StateHasChanged();
        }

    }
}
